import { Menu } from '@grammyjs/menu';
import { prisma } from '@pr-gram/database';
import { subscriptionService } from '../services/subscriptionService';
import type { BotContext } from '../types/context';

// –ú–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
export const subscriptionMenu = new Menu<BotContext>('subscription')
  .text('üèõÔ∏è –ü—É–±–ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã/—á–∞—Ç—ã', async (ctx) => {
    const publicText = `
üèõÔ∏è <b>–ü–£–ë–õ–ò–ß–ù–´–ï –ö–ê–ù–ê–õ–´/–ß–ê–¢–´</b>

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏.

üìù <b>–ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–ê–®–ï–ì–û –ß–ê–¢–ê:</b>

‚îå‚îÄ‚îÄ –û–°–ù–û–í–ù–´–ï ‚îÄ‚îÄ‚îê
<code>/setup @channel</code> - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏
<code>/unsetup @channel</code> - —É–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
<code>/unsetup</code> - —É–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
<code>/status</code> - –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

‚îå‚îÄ‚îÄ –° –¢–ê–ô–ú–ï–†–û–ú ‚îÄ‚îÄ‚îê
<code>/setup @channel 1d</code> - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 1 –¥–µ–Ω—å
<code>/setup @channel 5h</code> - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 5 —á–∞—Å–æ–≤
<code>/setup @channel 30m</code> - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 30 –º–∏–Ω—É—Ç

üïí <b>–§–æ—Ä–º–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–∏:</b>
s - —Å–µ–∫—É–Ω–¥—ã | m - –º–∏–Ω—É—Ç—ã | h - —á–∞—Å—ã | d - –¥–Ω–∏

üìù <b>–ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:</b>
1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ @prgram_bot –≤ –≤–∞—à —á–∞—Ç –∫–∞–∫ –∞–¥–º–∏–Ω–∞
2. –ù–∞–ø–∏—à–∏—Ç–µ: <code>/setup @your_channel</code>
3. –ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è

‚ö†Ô∏è –õ–∏–º–∏—Ç: 5 –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
`;

    await ctx.editMessageText(publicText, {
      reply_markup: { 
        inline_keyboard: [
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]
        ]
      },
      parse_mode: 'HTML'
    });
  }).row()
  
  .text('üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–Ω–∞–ª—ã/—á–∞—Ç—ã', async (ctx) => {
    const privateText = `
üîí <b>–ü–†–ò–í–ê–¢–ù–´–ï –ö–ê–ù–ê–õ–´/–ß–ê–¢–´</b>

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–µ –∫–∞–Ω–∞–ª—ã.

üìù <b>–ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–ê–®–ï–ì–û –ß–ê–¢–ê:</b>

‚îå‚îÄ‚îÄ –û–°–ù–û–í–ù–´–ï ‚îÄ‚îÄ‚îê
<code>/setup -1001234567890</code> - –ø–æ ID –∫–∞–Ω–∞–ª–∞
<code>/unsetup -1001234567890</code> - —É–±—Ä–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
<code>/status</code> - –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

‚îå‚îÄ‚îÄ –° –¢–ê–ô–ú–ï–†–û–ú ‚îÄ‚îÄ‚îê
<code>/setup -1001234567890 1d</code> - –Ω–∞ 1 –¥–µ–Ω—å
<code>/setup -1001234567890 12h</code> - –Ω–∞ 12 —á–∞—Å–æ–≤

üîç <b>–ö–ê–ö –£–ó–ù–ê–¢–¨ ID –ö–ê–ù–ê–õ–ê:</b>
1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∞
2. –ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –±–æ—Ç—É @userinfobot
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Chat ID (–Ω–∞–ø—Ä–∏–º–µ—Ä: -1001234567890)

üìù <b>–ü–†–ò–ú–ï–† –ù–ê–°–¢–†–û–ô–ö–ò:</b>
1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à —á–∞—Ç –∫–∞–∫ –∞–¥–º–∏–Ω–∞
2. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∞
3. –ù–∞–ø–∏—à–∏—Ç–µ: <code>/setup -1001234567890</code>

‚ö†Ô∏è <b>–í–ê–ñ–ù–û:</b> –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –æ–±–æ–∏—Ö —á–∞—Ç–∞—Ö!
`;

    await ctx.editMessageText(privateText, {
      reply_markup: { 
        inline_keyboard: [
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]
        ]
      },
      parse_mode: 'HTML'
    });
  }).row()
  
  .text('üîó –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', async (ctx) => {
    const inviteText = `
üîó <b>–ü–†–ò–ì–õ–ê–°–ò–¢–ï–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê</b>

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Å —Ü–µ–ª—å—é –ø–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.

üìù <b>–ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–ê–®–ï–ì–û –ß–ê–¢–ê:</b>

‚îå‚îÄ‚îÄ –ù–ê–°–¢–†–û–ô–ö–ê ‚îÄ‚îÄ‚îê
<code>/setup_invite CHAT_ID INVITE_LINK GOAL</code>

<b>–ü—Ä–∏–º–µ—Ä:</b>
<code>/setup_invite -1001234567890 https://t.me/+AbCdEfGhIjKlMn 100</code>

‚îå‚îÄ‚îÄ –£–ü–†–ê–í–õ–ï–ù–ò–ï ‚îÄ‚îÄ‚îê
<code>/unsetup_invite</code> - –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
<code>/status</code> - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å

üéØ <b>–û–°–û–ë–ï–ù–ù–û–°–¢–ò:</b>
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Å—á–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏ = –∞–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–∞–∫—Ä—É—Ç–æ–∫

üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

‚ö†Ô∏è <b>–¢–†–ï–ë–û–í–ê–ù–ò–Ø:</b>
‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –æ–±–æ–∏—Ö —á–∞—Ç–∞—Ö
‚Ä¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞
‚Ä¢ –¶–µ–ª—å: –æ—Ç 10 –¥–æ 100,000 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
`;

    await ctx.editMessageText(inviteText, {
      reply_markup: { 
        inline_keyboard: [
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]
        ]
      },
      parse_mode: 'HTML'
    });
  }).row()
  
  .text('üéØ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ PR GRAM', async (ctx) => {
    const referralText = `
üéØ <b>–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê PR GRAM</b>

–î–æ–±–∞–≤—å—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É PR GRAM!

üí∞ <b>–í–´ –ë–£–î–ï–¢–ï –ü–û–õ–£–ß–ê–¢–¨:</b>
‚Ä¢ 1000 GRAM ‚Äì –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
‚Ä¢ +10% ‚Äì –æ—Ç —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚Ä¢ +5% ‚Äì –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –≤–∞—à–∏–º–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏

üìù <b>–ù–ê–°–¢–†–û–ô–ö–ê:</b>
‚ñ∏ –®–∞–≥ 1: –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à —á–∞—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∞
‚ñ∏ –®–∞–≥ 2: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/setup_bot</code> —Å –≤–∞—à–∏–º ID

‚îå‚îÄ‚îÄ –ö–û–ú–ê–ù–î–´ ‚îÄ‚îÄ‚îê
<code>/setup_bot ${ctx.user.telegramId}</code> - –≤–∫–ª—é—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
<code>/setup_bot ${ctx.user.telegramId} 1d</code> - —Å —Ç–∞–π–º–µ—Ä–æ–º –Ω–∞ 1 –¥–µ–Ω—å
<code>/unsetup_bot</code> - –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É

üìä <b>–í–ê–® –†–ï–§–ï–†–ê–õ–¨–ù–´–ô –ü–†–û–§–ò–õ–¨:</b>
‚îú ID: <code>${ctx.user.telegramId}</code>
‚îú –°—Å—ã–ª–∫–∞: <code>https://t.me/prgram_bot?start=${ctx.user.telegramId}</code>
‚îú –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${await getReferralCount(ctx.user.telegramId)}
‚îî –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${await getReferralEarnings(ctx.user.telegramId)} GRAM

üí° <b>–ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢:</b>
1. –£—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ
2. –¢–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å
3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Ö–æ–¥ —Å –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞

üéÅ <b>–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ë–û–ù–£–°–´:</b>
‚Ä¢ x2 –¥–æ—Ö–æ–¥ –∑–∞ Premium —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∑–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚Ä¢ –û—Å–æ–±—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —Ç–æ–ø-—Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤
`;

    const keyboard = [
      [{ text: 'üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID', callback_data: `copy_id:${ctx.user.telegramId}` }],
      [{ text: 'üîó –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', callback_data: `copy_ref:${ctx.user.telegramId}` }],
      [{ text: 'üìä –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã', callback_data: 'menu:referrals' }],
      [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]
    ];

    await ctx.editMessageText(referralText, {
      reply_markup: { inline_keyboard: keyboard },
      parse_mode: 'HTML'
    });
  }).row()
  
  .text('‚åõ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π', async (ctx) => {
    const autoDeleteText = `
‚åõ <b>–ê–í–¢–û–£–î–ê–õ–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô</b>

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏.

üìù <b>–ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–ê–®–ï–ì–û –ß–ê–¢–ê:</b>

‚îå‚îÄ‚îÄ –ù–ê–°–¢–†–û–ô–ö–ê ‚îÄ‚îÄ‚îê
<code>/autodelete 30s</code> - —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
<code>/autodelete 2m</code> - —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
<code>/autodelete 5m</code> - —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
<code>/autodelete off</code> - –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ

‚îå‚îÄ‚îÄ –ò–ù–§–û–†–ú–ê–¶–ò–Ø ‚îÄ‚îÄ‚îê
<code>/get_autodelete</code> - —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

üïí <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã:</b>
‚Ä¢ –ú–∏–Ω–∏–º—É–º: 15 —Å–µ–∫—É–Ω–¥
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: 5 –º–∏–Ω—É—Ç
‚Ä¢ –§–æ—Ä–º–∞—Ç—ã: 30s, 2m, 300s

üí° <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>
‚Ä¢ 30-60 —Å–µ–∫—É–Ω–¥ - –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
‚Ä¢ 2-3 –º–∏–Ω—É—Ç—ã - –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –≥—Ä—É–ø–ø
‚Ä¢ 5 –º–∏–Ω—É—Ç - –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø

‚öôÔ∏è <b>–û–°–û–ë–ï–ù–ù–û–°–¢–ò:</b>
‚Ä¢ –£–¥–∞–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–≤–µ—Ä–∫–µ
‚Ä¢ –£—Å–ø–µ—à–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Å—Ç–∞—é—Ç—Å—è
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞

üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–í–¢–û–£–î–ê–õ–ï–ù–ò–Ø:</b>
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
`;

    await ctx.editMessageText(autoDeleteText, {
      reply_markup: { 
        inline_keyboard: [
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]
        ]
      },
      parse_mode: 'HTML'
    });
  }).row()
  
  .text('üìä –ú–æ–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏', async (ctx) => {
    try {
      const userChecks = await subscriptionService.getUserSubscriptionChecks(ctx.user.telegramId);
      
      if (userChecks.length === 0) {
        await ctx.editMessageText(
          'üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏.\n\n–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à —á–∞—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É!',
          {
            reply_markup: { 
              inline_keyboard: [
                [{ text: 'üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data: 'subscription:help' }],
                [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: 'menu:subscription' }]
              ]
            }
          }
        );
        return;
      }

      let checksText = `üìä <b>–ú–û–ò –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ö–ò</b>\n\nüìà –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${userChecks.length}\n\n`;
      
      userChecks.forEach((check, index) => {
        const typeEmoji = getCheckTypeEmoji(check.setupType);
        const statusEmoji = check.isActive ? 'üü¢' : 'üî¥';
        const target = check.targetTitle || check.targetUsername || `Chat ${check.targetChatId}`;
        
        checksText += `${statusEmoji} ${typeEmoji} <b>${check.chatTitle || `–ß–∞—Ç ${check.chatId}`}</b>\n`;
        checksText += `   üéØ –¶–µ–ª—å: ${target}\n`;
        checksText += `   üìä –ü—Ä–æ–≤–µ—Ä–æ–∫: ${check.statistics.totalChecks} (${check.statistics.passedChecks} –ø—Ä–æ—à–ª–∏)\n`;
        checksText += `   üìÖ –°–æ–∑–¥–∞–Ω–æ: ${formatDate(check.createdAt)}\n\n`;
      });

      const keyboard = [];
      
      // Buttons for each check
      userChecks.forEach((check, index) => {
        keyboard.push([
          { text: `üìä ${check.chatTitle || `–ß–∞—Ç ${check.chatId}`}`, callback_data: `sub_stats:${check.id}` }
        ]);
      });

      keyboard.push([{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]);

      await ctx.editMessageText(checksText, {
        reply_markup: { inline_keyboard: keyboard },
        parse_mode: 'HTML'
      });
    } catch (error) {
      console.error('Show subscription checks error:', error);
      await ctx.editMessageText(
        '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—à–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        { reply_markup: { inline_keyboard: [[{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: 'menu:subscription' }]] } }
      );
    }
  }).row()
  
  .back('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback
subscriptionMenu.register(async (ctx) => {
  const data = ctx.callbackQuery?.data;
  
  if (data?.startsWith('copy_id:')) {
    const userId = data.replace('copy_id:', '');
    await ctx.answerCallbackQuery(`ID —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${userId}`);
    return;
  }
  
  if (data?.startsWith('copy_ref:')) {
    const userId = data.replace('copy_ref:', '');
    await ctx.answerCallbackQuery(`–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: https://t.me/prgram_bot?start=${userId}`);
    return;
  }

  if (data?.startsWith('sub_stats:')) {
    const checkId = data.replace('sub_stats:', '');
    await showSubscriptionCheckStats(ctx, checkId);
    return;
  }

  if (data === 'subscription:help') {
    await showSubscriptionHelp(ctx);
    return;
  }

  // –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
  const subscriptionText = `
‚úÖ <b>–ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò</b>

–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª—ã/—á–∞—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.

üìã <b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>
‚ñ∏ –®–∞–≥ 1: –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à —á–∞—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
‚ñ∏ –®–∞–≥ 2: –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∞–¥–º–∏–Ω—ã –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
‚ñ∏ –®–∞–≥ 3: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setup

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏:
`;

  if (ctx.callbackQuery) {
    await ctx.editMessageText(subscriptionText, {
      reply_markup: subscriptionMenu,
      parse_mode: 'HTML'
    });
    await ctx.answerCallbackQuery();
  }
});

// Helper —Ñ—É–Ω–∫—Ü–∏–∏
const getCheckTypeEmoji = (type: string): string => {
  const emojis = {
    public_channel: 'üèõÔ∏è',
    private_channel: 'üîí',
    invite_link: 'üîó',
    referral_bot: 'üéØ'
  };
  return emojis[type as keyof typeof emojis] || '‚úÖ';
};

const formatDate = (date: Date): string => {
  return date.toLocaleDateString('ru-RU', {
    day: '2-digit',
    month: '2-digit',
    hour: '2-digit',
    minute: '2-digit'
  });
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
const getReferralCount = async (userId: number): Promise<number> => {
  try {
    return await prisma.user.count({
      where: { referrerId: userId }
    });
  } catch (error) {
    console.error('Get referral count error:', error);
    return 0;
  }
};

const getReferralEarnings = async (userId: number): Promise<number> => {
  try {
    const result = await prisma.transaction.aggregate({
      where: {
        userId: userId,
        type: 'referral'
      },
      _sum: {
        amount: true
      }
    });
    
    return result._sum.amount?.toNumber() || 0;
  } catch (error) {
    console.error('Get referral earnings error:', error);
    return 0;
  }
};

const showSubscriptionCheckStats = async (ctx: BotContext, checkId: string) => {
  try {
    const check = await prisma.subscriptionCheck.findUnique({
      where: { id: checkId },
      include: {
        creator: {
          select: {
            username: true,
            firstName: true
          }
        }
      }
    });

    if (!check) {
      await ctx.answerCallbackQuery('‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    const stats = check.statistics as any;
    const successRate = stats.totalChecks > 0 ? Math.round((stats.passedChecks / stats.totalChecks) * 100) : 0;

    const statsText = `
üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–í–ï–†–ö–ò</b>

üè∑Ô∏è <b>–ß–∞—Ç:</b> ${check.chatTitle || `ID: ${check.chatId}`}
üéØ <b>–¶–µ–ª—å:</b> ${check.targetTitle || check.targetUsername || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üìÖ <b>–°–æ–∑–¥–∞–Ω–æ:</b> ${formatDate(check.createdAt)}
${check.expiresAt ? `‚è∞ <b>–ò—Å—Ç–µ–∫–∞–µ—Ç:</b> ${formatDate(check.expiresAt)}` : ''}

üìà <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>
‚îú –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${stats.totalChecks || 0}
‚îú –ü—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É: ${stats.passedChecks || 0}
‚îú –ù–µ –ø—Ä–æ—à–ª–∏: ${stats.failedChecks || 0}
‚îú –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${successRate}%
‚îú –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.uniqueUsers || 0}
‚îú –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${stats.deletedMessages || 0}
‚îî –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${Math.round((stats.averageCheckTime || 0) / 1000)}—Å

${check.subscriberGoal ? `üéØ <b>–ü—Ä–æ–≥—Ä–µ—Å—Å —Ü–µ–ª–∏:</b> ${check.currentSubscribers}/${check.subscriberGoal} (${Math.round((check.currentSubscribers / check.subscriberGoal) * 100)}%)` : ''}
`;

    await ctx.editMessageText(statsText, {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data: `sub_stats:${checkId}` }],
          [{ text: check.isActive ? '‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' : '‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å', callback_data: `sub_toggle:${checkId}` }],
          [{ text: 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data: `sub_delete:${checkId}` }],
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–∞–º', callback_data: 'subscription:my_checks' }]
        ]
      },
      parse_mode: 'HTML'
    });
  } catch (error) {
    console.error('Show subscription check stats error:', error);
    await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
  }
};

const showSubscriptionHelp = async (ctx: BotContext) => {
  const helpText = `
üìñ <b>–ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø</b>

<b>üèõÔ∏è –ü–£–ë–õ–ò–ß–ù–´–ï –ö–ê–ù–ê–õ–´:</b>
1. –î–æ–±–∞–≤—å—Ç–µ @prgram_bot –≤ –≤–∞—à —á–∞—Ç –∫–∞–∫ –∞–¥–º–∏–Ω–∞
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>/setup @your_channel</code>
3. –ì–æ—Ç–æ–≤–æ! –ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è

<b>üîí –ü–†–ò–í–ê–¢–ù–´–ï –ö–ê–ù–ê–õ–´:</b>
1. –î–æ–±–∞–≤—å—Ç–µ @prgram_bot –≤ –≤–∞—à —á–∞—Ç –∫–∞–∫ –∞–¥–º–∏–Ω–∞
2. –î–æ–±–∞–≤—å—Ç–µ @prgram_bot –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∞
3. –£–∑–Ω–∞–π—Ç–µ ID –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ @userinfobot
4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>/setup -1001234567890</code>

<b>üéØ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê:</b>
1. –î–æ–±–∞–≤—å—Ç–µ @prgram_bot –≤ –≤–∞—à —á–∞—Ç –∫–∞–∫ –∞–¥–º–∏–Ω–∞
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>/setup_bot ${ctx.user.telegramId}</code>
3. –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ

<b>‚ö†Ô∏è –¢–†–ï–ë–û–í–ê–ù–ò–Ø:</b>
‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –≤–∞—à–µ–º —á–∞—Ç–µ
‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ —Ü–µ–ª–µ–≤–æ–º –∫–∞–Ω–∞–ª–µ
‚Ä¢ –ü—Ä–∞–≤–∞ –±–æ—Ç–∞: —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

<b>üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:</b>
‚Ä¢ <code>/autodelete 30s</code> - –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫
‚Ä¢ <code>/status</code> - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
‚Ä¢ <code>/unsetup</code> - –æ—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

<b>üí° –°–û–í–ï–¢–´:</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–π–º–µ—Ä—ã –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π
‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø—Ä–æ–≤–µ—Ä–æ–∫
‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
`;

  await ctx.editMessageText(helpText, {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'menu:subscription' }]
      ]
    },
    parse_mode: 'HTML'
  });
};